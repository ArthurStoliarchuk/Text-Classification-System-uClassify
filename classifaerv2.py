import streamlit as st
from uclassify import uclassify
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É uclassify
a = uclassify()

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–ª—é—á—ñ
a.setWriteApiKey('cKrbq726LvrT') 
a.setReadApiKey('cnytszVmNdlu') 

# –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
categories = ["business", "entertainment", "politics", "sport", "tech"]

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É
def classify_text(text_to_classify):
    try:
        # –ö–ª–∞—Å–∏—Ñ—ñ–∫—É—î–º–æ —Ç–µ–∫—Å—Ç
        d = a.classify([text_to_classify], "TextClassifier5topics")

        # –ù–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ –æ—Ü—ñ–Ω–∫–∏ —Ç–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —ó—Ö —É –≤—ñ–¥—Å–æ—Ç–∫–∏
        scores = [float(score) for category, score in d[0][2]]
        total_score = sum(scores)
        percentages = [(score / total_score) * 100 for score in scores]

        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∑ –Ω–∞–π–±—ñ–ª—å—à–∏–º –≤—ñ–¥—Å–æ—Ç–∫–æ–º
        max_percentage_index = percentages.index(max(percentages))
        max_category = d[0][2][max_percentage_index][0]

        # –í—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–∞ –µ–º–æ–¥–∑—ñ
        emojis = {
            "business": "üë©‚Äçüíº",
            "entertainment": "üçø",
            "politics": "‚úäüèº",
            "sport": "üèÉüèæü§∏",
            "tech": "ü§ñ"
        }

        # –í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞
        result = f"{max_category.capitalize()} - {percentages[max_percentage_index]:.2f}% {emojis[max_category]}"

        return result, max_category
    except Exception as e:
        st.error(str(e))

# –°–ø–∏—Å–æ–∫ —Å—Ç–æ—Ä—ñ–Ω–æ–∫
pages = ["–ü—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó", "–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç—É", "–ü–æ—Ä–æ–∂–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞"]

# –í–∏–±—ñ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏
page = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É", pages)

if page == "–ü—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó":
    st.title("–°–∏—Å—Ç–µ–º–∞ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—Éüíª")

    text = st.text_area("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó")

   
    col1, col2 = st.columns(2)

    with col1:
        if st.button('–ü—Ä–æ–≥–Ω–æ–∑—É–≤–∞—Ç–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–æ–≥–æ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'):
            if "results" not in st.session_state:
                st.session_state.results = []
            result, predicted_category = classify_text(text)
            st.session_state.results.append(f"–ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è - {result}")
            for result in st.session_state.results:
                st.info(result)

elif page == "–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç—É":
    st.title("–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç—É")

    if st.button('–¢–µ—Å—Ç—É–≤–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Ç–µ–∫—Å—Ç'):
        # –ß–∏—Ç–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
        test_data = pd.read_csv("C:\\Users\\clash\\KursovayaTEXT_1\\bbc2\\BBC News Test.csv")
        sample_solution = pd.read_csv("C:\\Users\\clash\\KursovayaTEXT_1\\bbc2\\BBC News Sample Solution.csv")
        # –û–±'—î–¥–Ω—É—î–º–æ –¥–≤–∞ DataFrame –∑–∞ —Å—Ç–æ–≤–ø—Ü–µ–º 'ArticleId'
        test_data = pd.merge(test_data, sample_solution, on='ArticleId')
        # –í–∏–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
        random_category = np.random.choice(categories)
        # –í–∏–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Ç–µ–∫—Å—Ç –∑ —Ü—ñ—î—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        random_text = test_data[test_data['Category'] == random_category]['Text'].sample(n=1).values[0]
        # –ö–ª–∞—Å–∏—Ñ—ñ–∫—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Ç–µ–∫—Å—Ç
        result, predicted_category = classify_text(random_text)
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Å–ø—Ä–∞–≤–∂–Ω—é –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
        actual_category = random_category
        # –í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
        st.info(f"–ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è - {result}")
        st.info(f"–°–ø—Ä–∞–≤–∂–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—è - {actual_category}")

elif page == "–ü–æ—Ä–æ–∂–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞":
    st.title("–ü–æ—Ä–æ–∂–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞")
    # –¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ —Å–≤—ñ–π –∫–æ–¥